apiVersion: toolhive.stacklok.dev/v1alpha1
kind: MCPServer
metadata:
  name: {{ include "oracle-sqlcl-mcp.fullname" . }}
  labels:
    {{- include "oracle-sqlcl-mcp.labels" . | nindent 4 }}
spec:
  image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
  permissionProfile:
    name: {{ .Values.permissionProfile.name }}
    type: {{ .Values.permissionProfile.type }}
  podTemplateSpec:
    metadata: {}
    spec:
      serviceAccountName: {{ include "oracle-sqlcl-mcp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.persistence.data.enabled }}
        - name: sqlcl-data
          persistentVolumeClaim:
            claimName: {{- if .Values.persistence.data.existingClaim }} {{ .Values.persistence.data.existingClaim }} {{- else }} {{ include "oracle-sqlcl-mcp.fullname" . }}-data {{- end }}
        {{- end }}
      containers:
      - name: mcp        
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        env:
        - name: HOME
          value: {{ .Values.persistence.data.mountPath | quote }}
        - name: JAVA_TOOL_OPTIONS
          value: {{ .Values.env.JAVA_TOOL_OPTIONS | quote }}
        - name: _JAVA_OPTIONS
          value: {{ .Values.env._JAVA_OPTIONS | quote }}
        {{- if .Values.secret.enabled }}
        - name: ORACLE_USER
          valueFrom:
            secretKeyRef:
              name: {{ default (printf "%s-oracle" (include "oracle-sqlcl-mcp.fullname" .)) .Values.secret.name }}
              key: ORACLE_USER
        - name: ORACLE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ default (printf "%s-oracle" (include "oracle-sqlcl-mcp.fullname" .)) .Values.secret.name }}
              key: ORACLE_PASSWORD
        - name: ORACLE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: {{ default (printf "%s-oracle" (include "oracle-sqlcl-mcp.fullname" .)) .Values.secret.name }}
              key: ORACLE_CONNECTION_STRING
        - name: ORACLE_CONN_NAME
          valueFrom:
            secretKeyRef:
              name: {{ default (printf "%s-oracle" (include "oracle-sqlcl-mcp.fullname" .)) .Values.secret.name }}
              key: ORACLE_CONN_NAME
        {{- else }}
        {{- if .Values.env.ORACLE_USER }}
        - name: ORACLE_USER
          value: {{ .Values.env.ORACLE_USER | quote }}
        {{- end }}
        {{- if .Values.env.ORACLE_PASSWORD }}
        - name: ORACLE_PASSWORD
          value: {{ .Values.env.ORACLE_PASSWORD | quote }}
        {{- end }}
        {{- if .Values.env.ORACLE_CONNECTION_STRING }}
        - name: ORACLE_CONNECTION_STRING
          value: {{ .Values.env.ORACLE_CONNECTION_STRING | quote }}
        {{- end }}
        {{- if .Values.env.ORACLE_CONN_NAME }}
        - name: ORACLE_CONN_NAME
          value: {{ .Values.env.ORACLE_CONN_NAME | quote }}
        {{- end }}
        {{- end }}
        volumeMounts:
        {{- if .Values.persistence.data.enabled }}
        - name: sqlcl-data
          mountPath: {{ .Values.persistence.data.mountPath }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
  port: {{ .Values.port }}
  transport: {{ .Values.transport }}
